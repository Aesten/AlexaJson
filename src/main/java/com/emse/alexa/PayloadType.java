package com.emse.alexa;

import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonValue;

import java.io.IOException;

public enum PayloadType {
    ACCEPT_GRANT_FAILED, ALREADY_IN_OPERATION, AUTHORIZATION_REQUIRED, BRIDGE_UNREACHABLE, BYPASS_NEEDED, CHILD_LOCK, CLOUD_CONTROL_DISABLED, COOK_DURATION_TOO_LONG, DOOR_CLOSED_TOO_LONG, DOOR_OPEN, DUAL_SETPOINTS_UNSUPPORTED, ENDPOINT_BUSY, ENDPOINT_LOW_POWER, ENDPOINT_UNREACHABLE, EXPIRED_AUTHORIZATION_CREDENTIAL, FIRMWARE_OUT_OF_DATE, HARDWARE_MALFUNCTION, INSUFFICIENT_PERMISSIONS, INTERNAL_ERROR, INVALID_AUTHORIZATION_CREDENTIAL, INVALID_DIRECTIVE, INVALID_VALUE, NOT_CALIBRATED, NOT_IN_OPERATION, NOT_READY, NOT_SUPPORTED_IN_CURRENT_MODE, NO_ACTIVE_MONITORABLE_DEVICES, NO_SUCH_ENDPOINT, POWER_LEVEL_NOT_SUPPORTED, PREHEAT_REQUIRED, PROBE_REQUIRED, RATE_LIMIT_EXCEEDED, REMOTE_START_DISABLED, REMOTE_START_NOT_SUPPORTED, REMOVE_PROBE, REQUESTED_SETPOINTS_TOO_CLOSE, TEMPERATURE_VALUE_OUT_OF_RANGE, THERMOSTAT_IS_OFF, TOO_MANY_FAILED_ATTEMPTS, TRIPLE_SETPOINTS_UNSUPPORTED, UNAUTHORIZED, UNCLEARED_ALARM, UNCLEARED_TROUBLE, UNSUPPORTED_THERMOSTAT_MODE, UNWILLING_TO_SET_SCHEDULE, UNWILLING_TO_SET_VALUE, VALUE_OUT_OF_RANGE;

    @JsonValue
    public String toValue() {
        return switch (this) {
            case ACCEPT_GRANT_FAILED -> "ACCEPT_GRANT_FAILED";
            case ALREADY_IN_OPERATION -> "ALREADY_IN_OPERATION";
            case AUTHORIZATION_REQUIRED -> "AUTHORIZATION_REQUIRED";
            case BRIDGE_UNREACHABLE -> "BRIDGE_UNREACHABLE";
            case BYPASS_NEEDED -> "BYPASS_NEEDED";
            case CHILD_LOCK -> "CHILD_LOCK";
            case CLOUD_CONTROL_DISABLED -> "CLOUD_CONTROL_DISABLED";
            case COOK_DURATION_TOO_LONG -> "COOK_DURATION_TOO_LONG";
            case DOOR_CLOSED_TOO_LONG -> "DOOR_CLOSED_TOO_LONG";
            case DOOR_OPEN -> "DOOR_OPEN";
            case DUAL_SETPOINTS_UNSUPPORTED -> "DUAL_SETPOINTS_UNSUPPORTED";
            case ENDPOINT_BUSY -> "ENDPOINT_BUSY";
            case ENDPOINT_LOW_POWER -> "ENDPOINT_LOW_POWER";
            case ENDPOINT_UNREACHABLE -> "ENDPOINT_UNREACHABLE";
            case EXPIRED_AUTHORIZATION_CREDENTIAL -> "EXPIRED_AUTHORIZATION_CREDENTIAL";
            case FIRMWARE_OUT_OF_DATE -> "FIRMWARE_OUT_OF_DATE";
            case HARDWARE_MALFUNCTION -> "HARDWARE_MALFUNCTION";
            case INSUFFICIENT_PERMISSIONS -> "INSUFFICIENT_PERMISSIONS";
            case INTERNAL_ERROR -> "INTERNAL_ERROR";
            case INVALID_AUTHORIZATION_CREDENTIAL -> "INVALID_AUTHORIZATION_CREDENTIAL";
            case INVALID_DIRECTIVE -> "INVALID_DIRECTIVE";
            case INVALID_VALUE -> "INVALID_VALUE";
            case NOT_CALIBRATED -> "NOT_CALIBRATED";
            case NOT_IN_OPERATION -> "NOT_IN_OPERATION";
            case NOT_READY -> "NOT_READY";
            case NOT_SUPPORTED_IN_CURRENT_MODE -> "NOT_SUPPORTED_IN_CURRENT_MODE";
            case NO_ACTIVE_MONITORABLE_DEVICES -> "NO_ACTIVE_MONITORABLE_DEVICES";
            case NO_SUCH_ENDPOINT -> "NO_SUCH_ENDPOINT";
            case POWER_LEVEL_NOT_SUPPORTED -> "POWER_LEVEL_NOT_SUPPORTED";
            case PREHEAT_REQUIRED -> "PREHEAT_REQUIRED";
            case PROBE_REQUIRED -> "PROBE_REQUIRED";
            case RATE_LIMIT_EXCEEDED -> "RATE_LIMIT_EXCEEDED";
            case REMOTE_START_DISABLED -> "REMOTE_START_DISABLED";
            case REMOTE_START_NOT_SUPPORTED -> "REMOTE_START_NOT_SUPPORTED";
            case REMOVE_PROBE -> "REMOVE_PROBE";
            case REQUESTED_SETPOINTS_TOO_CLOSE -> "REQUESTED_SETPOINTS_TOO_CLOSE";
            case TEMPERATURE_VALUE_OUT_OF_RANGE -> "TEMPERATURE_VALUE_OUT_OF_RANGE";
            case THERMOSTAT_IS_OFF -> "THERMOSTAT_IS_OFF";
            case TOO_MANY_FAILED_ATTEMPTS -> "TOO_MANY_FAILED_ATTEMPTS";
            case TRIPLE_SETPOINTS_UNSUPPORTED -> "TRIPLE_SETPOINTS_UNSUPPORTED";
            case UNAUTHORIZED -> "UNAUTHORIZED";
            case UNCLEARED_ALARM -> "UNCLEARED_ALARM";
            case UNCLEARED_TROUBLE -> "UNCLEARED_TROUBLE";
            case UNSUPPORTED_THERMOSTAT_MODE -> "UNSUPPORTED_THERMOSTAT_MODE";
            case UNWILLING_TO_SET_SCHEDULE -> "UNWILLING_TO_SET_SCHEDULE";
            case UNWILLING_TO_SET_VALUE -> "UNWILLING_TO_SET_VALUE";
            case VALUE_OUT_OF_RANGE -> "VALUE_OUT_OF_RANGE";
        };
    }

    @JsonCreator
    public static PayloadType forValue(String value) throws IOException {
        if (value.equals("ACCEPT_GRANT_FAILED")) return ACCEPT_GRANT_FAILED;
        if (value.equals("ALREADY_IN_OPERATION")) return ALREADY_IN_OPERATION;
        if (value.equals("AUTHORIZATION_REQUIRED")) return AUTHORIZATION_REQUIRED;
        if (value.equals("BRIDGE_UNREACHABLE")) return BRIDGE_UNREACHABLE;
        if (value.equals("BYPASS_NEEDED")) return BYPASS_NEEDED;
        if (value.equals("CHILD_LOCK")) return CHILD_LOCK;
        if (value.equals("CLOUD_CONTROL_DISABLED")) return CLOUD_CONTROL_DISABLED;
        if (value.equals("COOK_DURATION_TOO_LONG")) return COOK_DURATION_TOO_LONG;
        if (value.equals("DOOR_CLOSED_TOO_LONG")) return DOOR_CLOSED_TOO_LONG;
        if (value.equals("DOOR_OPEN")) return DOOR_OPEN;
        if (value.equals("DUAL_SETPOINTS_UNSUPPORTED")) return DUAL_SETPOINTS_UNSUPPORTED;
        if (value.equals("ENDPOINT_BUSY")) return ENDPOINT_BUSY;
        if (value.equals("ENDPOINT_LOW_POWER")) return ENDPOINT_LOW_POWER;
        if (value.equals("ENDPOINT_UNREACHABLE")) return ENDPOINT_UNREACHABLE;
        if (value.equals("EXPIRED_AUTHORIZATION_CREDENTIAL")) return EXPIRED_AUTHORIZATION_CREDENTIAL;
        if (value.equals("FIRMWARE_OUT_OF_DATE")) return FIRMWARE_OUT_OF_DATE;
        if (value.equals("HARDWARE_MALFUNCTION")) return HARDWARE_MALFUNCTION;
        if (value.equals("INSUFFICIENT_PERMISSIONS")) return INSUFFICIENT_PERMISSIONS;
        if (value.equals("INTERNAL_ERROR")) return INTERNAL_ERROR;
        if (value.equals("INVALID_AUTHORIZATION_CREDENTIAL")) return INVALID_AUTHORIZATION_CREDENTIAL;
        if (value.equals("INVALID_DIRECTIVE")) return INVALID_DIRECTIVE;
        if (value.equals("INVALID_VALUE")) return INVALID_VALUE;
        if (value.equals("NOT_CALIBRATED")) return NOT_CALIBRATED;
        if (value.equals("NOT_IN_OPERATION")) return NOT_IN_OPERATION;
        if (value.equals("NOT_READY")) return NOT_READY;
        if (value.equals("NOT_SUPPORTED_IN_CURRENT_MODE")) return NOT_SUPPORTED_IN_CURRENT_MODE;
        if (value.equals("NO_ACTIVE_MONITORABLE_DEVICES")) return NO_ACTIVE_MONITORABLE_DEVICES;
        if (value.equals("NO_SUCH_ENDPOINT")) return NO_SUCH_ENDPOINT;
        if (value.equals("POWER_LEVEL_NOT_SUPPORTED")) return POWER_LEVEL_NOT_SUPPORTED;
        if (value.equals("PREHEAT_REQUIRED")) return PREHEAT_REQUIRED;
        if (value.equals("PROBE_REQUIRED")) return PROBE_REQUIRED;
        if (value.equals("RATE_LIMIT_EXCEEDED")) return RATE_LIMIT_EXCEEDED;
        if (value.equals("REMOTE_START_DISABLED")) return REMOTE_START_DISABLED;
        if (value.equals("REMOTE_START_NOT_SUPPORTED")) return REMOTE_START_NOT_SUPPORTED;
        if (value.equals("REMOVE_PROBE")) return REMOVE_PROBE;
        if (value.equals("REQUESTED_SETPOINTS_TOO_CLOSE")) return REQUESTED_SETPOINTS_TOO_CLOSE;
        if (value.equals("TEMPERATURE_VALUE_OUT_OF_RANGE")) return TEMPERATURE_VALUE_OUT_OF_RANGE;
        if (value.equals("THERMOSTAT_IS_OFF")) return THERMOSTAT_IS_OFF;
        if (value.equals("TOO_MANY_FAILED_ATTEMPTS")) return TOO_MANY_FAILED_ATTEMPTS;
        if (value.equals("TRIPLE_SETPOINTS_UNSUPPORTED")) return TRIPLE_SETPOINTS_UNSUPPORTED;
        if (value.equals("UNAUTHORIZED")) return UNAUTHORIZED;
        if (value.equals("UNCLEARED_ALARM")) return UNCLEARED_ALARM;
        if (value.equals("UNCLEARED_TROUBLE")) return UNCLEARED_TROUBLE;
        if (value.equals("UNSUPPORTED_THERMOSTAT_MODE")) return UNSUPPORTED_THERMOSTAT_MODE;
        if (value.equals("UNWILLING_TO_SET_SCHEDULE")) return UNWILLING_TO_SET_SCHEDULE;
        if (value.equals("UNWILLING_TO_SET_VALUE")) return UNWILLING_TO_SET_VALUE;
        if (value.equals("VALUE_OUT_OF_RANGE")) return VALUE_OUT_OF_RANGE;
        throw new IOException("Cannot deserialize PayloadType");
    }
}
